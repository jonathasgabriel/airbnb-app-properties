{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _modal_with_backdrop = require('./modal_with_backdrop');\n\nvar _modal_with_backdrop2 = _interopRequireDefault(_modal_with_backdrop);\n\nvar _get_aria_props = require('./get_aria_props');\n\nvar _get_aria_props2 = _interopRequireDefault(_get_aria_props);\n\nvar _modal_controller = require('./modal_controller');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ModalSetContainer = function (_React$Component) {\n  _inherits(ModalSetContainer, _React$Component);\n\n  function ModalSetContainer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ModalSetContainer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ModalSetContainer.__proto__ || Object.getPrototypeOf(ModalSetContainer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      modals: []\n    }, _this.onModals = function (modals) {\n      _this.setState({\n        modals: modals\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ModalSetContainer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      (0, _modal_controller.setModalSetHandler)(this.props.setId, this.onModals);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      (0, _modal_controller.clearModalSetHandler)(this.props.setId);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          backdropClassName = _props.backdropClassName,\n          backdropInClassName = _props.backdropInClassName,\n          backdropOutClassName = _props.backdropOutClassName,\n          containerClassName = _props.containerClassName,\n          modalClassName = _props.modalClassName,\n          modalInClassName = _props.modalInClassName,\n          modalOutClassName = _props.modalOutClassName,\n          wrapperClassName = _props.wrapperClassName;\n      var modals = this.state.modals;\n\n      if (modals.length === 0) {\n        return null;\n      }\n\n      return _react2.default.createElement('div', {\n        className: containerClassName\n      }, modals.map(function (m) {\n        return _react2.default.createElement(_modal_with_backdrop2.default, _extends({\n          key: m.id,\n          children: m.info.children,\n          backdropClassName: m.info.backdropClassName || backdropClassName,\n          outDelay: typeof m.info.outDelay === 'undefined' ? _this2.props.outDelay : m.info.outDelay,\n          backdropInClassName: m.info.backdropInClassName || backdropInClassName,\n          backdropOutClassName: m.info.backdropOutClassName || backdropOutClassName,\n          containerClassName: containerClassName,\n          modalClassName: m.info.className || modalClassName,\n          modalInClassName: m.info.inClassName || modalInClassName,\n          modalOutClassName: m.info.outClassName || modalOutClassName,\n          onBackdropClick: m.info.onBackdropClick,\n          wrapperClassName: wrapperClassName,\n          component: m.info.component,\n          props: m.info.props || {},\n          isOut: !!m.info.out,\n          context: {\n            setId: m.id\n          }\n        }, (0, _get_aria_props2.default)(m.info)));\n      }));\n    }\n  }]);\n\n  return ModalSetContainer;\n}(_react2.default.Component);\n\nexports.default = ModalSetContainer;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}